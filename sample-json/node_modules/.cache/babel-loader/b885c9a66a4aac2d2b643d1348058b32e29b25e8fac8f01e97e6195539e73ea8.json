{"ast":null,"code":"var _jsxFileName = \"/Users/sambasivamkrishnamurthy/react-projects/sample-json/src/Header.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Display from './Display.js';\nimport './Header.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Header() {\n  _s();\n  const API_URL = 'https://jsonplaceholder.typicode.com';\n  const [btnselect, setBtnSelect] = React.useState('');\n  const [errors, setErrors] = React.useState([]);\n  const [users, setUsers] = React.useState([]);\n  const [posts, setPosts] = React.useState([]);\n  const [comments, setComments] = React.useState([]);\n  async function handleUsers() {\n    setBtnSelect('Users');\n    console.log(btnselect);\n    try {\n      const response = await fetch(`${API_URL}/users`);\n      console.log(response);\n      if (response.status === 200) {\n        const data = await response.json();\n        setUsers(data);\n        console.log(data);\n      } else {\n        throw new Error('Users Data Load: Error Occured');\n      }\n    } catch (e) {\n      setErrors(e.message);\n    } finally {\n      setBtnSelect(null);\n    }\n  }\n  async function handlePosts() {\n    setBtnSelect('Posts');\n    try {\n      const response = await fetch(API_URL / btnselect);\n      if (response.status === 200) {\n        const data = await response.json();\n        setPosts(data);\n      } else {\n        throw new Error('Posts Data Load: Error Occured');\n      }\n    } catch (e) {\n      setErrors(e.message);\n    } finally {\n      setBtnSelect(null);\n    }\n  }\n  async function handleComments() {\n    setBtnSelect('Comments');\n    try {\n      const response = await fetch(API_URL / btnselect);\n      if (response.status === 200) {\n        const data = await response.json();\n        setComments(data);\n      } else {\n        throw new Error('Comments Data Load: Error Occured');\n      }\n    } catch (e) {\n      setErrors(e.message);\n    } finally {\n      setBtnSelect(null);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"new\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUsers,\n          children: \"Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePosts,\n          children: \"Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleComments,\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), errors, \" ? (\", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }, this), \") : (\", users, \" ? (\", /*#__PURE__*/_jsxDEV(Display, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this), \") )\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(Header, \"bCRxYtQIT1KivbP84R/F2fZAVwc=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","Display","jsxDEV","_jsxDEV","Header","_s","API_URL","btnselect","setBtnSelect","useState","errors","setErrors","users","setUsers","posts","setPosts","comments","setComments","handleUsers","console","log","response","fetch","status","data","json","Error","e","message","handlePosts","handleComments","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sambasivamkrishnamurthy/react-projects/sample-json/src/Header.js"],"sourcesContent":["import React from 'react'\nimport Display from './Display.js'\nimport './Header.css'\n\nfunction Header() {\n  const API_URL = 'https://jsonplaceholder.typicode.com'\n  const [btnselect, setBtnSelect] = React.useState('')\n  const [errors, setErrors] = React.useState([])\n  const [users, setUsers] = React.useState([])\n  const [posts, setPosts] = React.useState([])\n  const [comments, setComments] = React.useState([])\n  async function handleUsers(){\n    setBtnSelect('Users')\n    console.log(btnselect)\n    try {\n      const response = await fetch(`${API_URL}/users`)\n      console.log(response)\n      if (response.status === 200) {\n        const data = await response.json()\n        setUsers(data)\n        console.log(data)\n      } else {\n        throw new Error ('Users Data Load: Error Occured')\n      }\n    } catch (e) {\n      setErrors(e.message)\n    } finally {\n      setBtnSelect(null)\n    }\n  }  \n  async function handlePosts(){\n    setBtnSelect('Posts')\n    try {\n      const response = await fetch(API_URL/btnselect)\n      if (response.status === 200) {\n        const data = await response.json()\n        setPosts(data)\n      } else {\n        throw new Error ('Posts Data Load: Error Occured')\n      }\n    } catch (e) {\n      setErrors(e.message)\n    } finally {\n      setBtnSelect(null)\n    }\n  }\n  async function handleComments(){\n    setBtnSelect('Comments')\n    try {\n      const response = await fetch(API_URL/btnselect)\n      if (response.status === 200) {\n        const data = await response.json()\n        setComments(data)\n      } else {\n        throw new Error ('Comments Data Load: Error Occured')\n      }\n    } catch (e) {\n      setErrors(e.message)\n    } finally {\n      setBtnSelect(null)\n    }\n  }\n  return (\n    <main className='main'>\n        <ul>\n            <li className='new'>\n            <button onClick={handleUsers}>Users</button>\n            <button onClick={handlePosts}>Posts</button>\n            <button onClick={handleComments}>Comments</button>\n        </li>\n        </ul>\n        {errors} ? (\n          <p>{errors}</p>\n        ) : (\n              {users} ? (\n                <Display  \n                  users={users}\n                />  \n              )\n            )  \n\n              \n    </main>\n  )\n}\n\nexport default Header"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}