{"ast":null,"code":"var _jsxFileName = \"/Users/sambasivamkrishnamurthy/react-projects/sample-json/src/Header.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Display from './Display.js';\nimport './Header.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Header() {\n  _s();\n  const API_URL = 'https://jsonplaceholder.typicode.com';\n  const [btnselect, setBtnSelect] = React.useState('users');\n  const [errors, setErrors] = React.useState([]);\n  const [items, setItems] = React.useState([]);\n  async function handleItems(e) {\n    console.log('e value', e.target.value);\n    setBtnSelect(e.target.value);\n    console.log('btnselect', btnselect);\n    try {\n      const response = await fetch(`${API_URL}/${btnselect}`);\n      console.log(response);\n      if (response.status === 200) {\n        const data = await response.json();\n        setItems(data);\n        console.log('users', items);\n      } else {\n        throw new Error('Users Data Load: Error Occured');\n      }\n    } catch (e) {\n      setErrors(e.message);\n    } finally {\n      setBtnSelect(null);\n    }\n  }\n  async function handleUsers(e) {\n    setBtnSelect(e.target.value);\n    console.log(btnselect);\n    try {\n      const response = await fetch(`${API_URL}/users`);\n      console.log(response);\n      if (response.status === 200) {\n        const data = await response.json();\n        setItems(data);\n        console.log('users', items);\n      } else {\n        throw new Error('Users Data Load: Error Occured');\n      }\n    } catch (e) {\n      setErrors(e.message);\n    } finally {\n      setBtnSelect(null);\n    }\n  }\n  async function handlePosts(e) {\n    setBtnSelect(e.target.value);\n    console.log('posts', e.target.value);\n    try {\n      const response = await fetch(`${API_URL}/posts`);\n      if (response.status === 200) {\n        const data = await response.json();\n        setItems(data);\n        console.log('posts', items);\n      } else {\n        throw new Error('Posts Data Load: Error Occured');\n      }\n    } catch (e) {\n      setErrors(e.message);\n    } finally {\n      setBtnSelect(null);\n    }\n  }\n  async function handleComments(e) {\n    console.log('comments', e.target.value);\n    setBtnSelect(e.target.value);\n    try {\n      const response = await fetch(`${API_URL}/comments`);\n      if (response.status === 200) {\n        const data = await response.json();\n        setItems(data);\n        console.log('comments', items);\n      } else {\n        throw new Error('Comments Data Load: Error Occured');\n      }\n    } catch (e) {\n      setErrors(e.message);\n    } finally {\n      setBtnSelect(null);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"new\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          value: \"users\",\n          onClick: event => handleItems(event),\n          children: \"Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          value: \"posts\",\n          onClick: event => handleItems(event),\n          children: \"Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          value: \"comments\",\n          onClick: event => handleItems(event),\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(Header, \"k6DPqjF9/m8a8TAt1lbsWDvm/0E=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","Display","jsxDEV","_jsxDEV","Header","_s","API_URL","btnselect","setBtnSelect","useState","errors","setErrors","items","setItems","handleItems","e","console","log","target","value","response","fetch","status","data","json","Error","message","handleUsers","handlePosts","handleComments","className","children","onClick","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sambasivamkrishnamurthy/react-projects/sample-json/src/Header.js"],"sourcesContent":["import React from 'react'\nimport Display from './Display.js'\nimport './Header.css'\n\nfunction Header() {\n  const API_URL = 'https://jsonplaceholder.typicode.com'\n  const [btnselect, setBtnSelect] = React.useState('users')\n  const [errors, setErrors] = React.useState([])\n  const [items, setItems] = React.useState([])\n\n  async function handleItems(e){\n    console.log('e value', e.target.value)\n    setBtnSelect(e.target.value)\n    console.log('btnselect', btnselect)\n    try {\n      const response = await fetch(`${API_URL}/${btnselect}`)\n      console.log(response)\n      if (response.status === 200) {\n        const data = await response.json()\n        setItems(data)\n        console.log('users', items)\n      } else {\n        throw new Error ('Users Data Load: Error Occured')\n      }\n    } catch (e) {\n      setErrors(e.message)\n    } finally {\n      setBtnSelect(null)\n    }\n  }\n  \n  async function handleUsers(e){\n    setBtnSelect(e.target.value)\n    console.log(btnselect)\n    try {\n      const response = await fetch(`${API_URL}/users`)\n      console.log(response)\n      if (response.status === 200) {\n        const data = await response.json()\n        setItems(data)\n        console.log('users', items)\n      } else {\n        throw new Error ('Users Data Load: Error Occured')\n      }\n    } catch (e) {\n      setErrors(e.message)\n    } finally {\n      setBtnSelect(null)\n    }\n  }  \n  async function handlePosts(e){\n    setBtnSelect(e.target.value)\n    console.log('posts', e.target.value)\n    try {\n      const response = await fetch(`${API_URL}/posts`)\n      if (response.status === 200) {\n        const data = await response.json()\n        setItems(data)\n        console.log('posts',items)\n      } else {\n        throw new Error ('Posts Data Load: Error Occured')\n      }\n    } catch (e) {\n      setErrors(e.message)\n    } finally {\n      setBtnSelect(null)\n    }\n  }\n  async function handleComments(e){\n    console.log('comments', e.target.value)\n    setBtnSelect(e.target.value)\n    try {\n      const response = await fetch(`${API_URL}/comments`)\n      if (response.status === 200) {\n        const data = await response.json()\n        setItems(data)\n        console.log('comments', items)\n      } else {\n        throw new Error ('Comments Data Load: Error Occured')\n      }\n    } catch (e) {\n      setErrors(e.message)\n    } finally {\n      setBtnSelect(null)\n    }\n  }\n  \n  return (\n    <main className='main'>\n      <ul>\n        <li className='new'>\n          <button value='users' onClick={(event)=>handleItems(event)}>Users</button>\n          <button value='posts' onClick={(event)=>handleItems(event)}>Posts</button>\n          <button value='comments' onClick={(event)=>handleItems(event)}>Comments</button>\n        </li>\n      </ul>\n       <Display\n        items={items}\n       />\n    </main>\n  );\n}\n\nexport default Header"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}