{"ast":null,"code":"const Requests = async function () {\n  let url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  let errMessage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  console.log(url);\n  console.log(options);\n  try {\n    const response = await fetch(url, options);\n    console.log(response);\n    if (response.status !== 200) throw new Error(\"Please reload data\");\n  } catch (err) {\n    errMessage = err.Message;\n  } finally {\n    return errMessage;\n  }\n};\n_c = Requests;\nexport default Requests;\nvar _c;\n$RefreshReg$(_c, \"Requests\");","map":{"version":3,"names":["Requests","url","arguments","length","undefined","options","errMessage","console","log","response","fetch","status","Error","err","Message","_c","$RefreshReg$"],"sources":["/Users/sambasivamkrishnamurthy/react-projects/ToDoApp/src/Requests.js"],"sourcesContent":["const Requests = async(url='', options=null, errMessage=null) => {\n    console.log(url)\n    console.log(options)\n    try{\n        const response = await fetch(url, options)\n        console.log(response)\n        if (response.status !== 200) throw new Error(\"Please reload data\")\n    } catch(err){\n        errMessage = err.Message\n    } finally {\n        return errMessage\n    }\n}\nexport default Requests\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,eAAAA,CAAA,EAAgD;EAAA,IAA1CC,GAAG,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,EAAE;EAAA,IAAEG,OAAO,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,IAAI;EAAA,IAAEI,UAAU,GAAAJ,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,IAAI;EACxDK,OAAO,CAACC,GAAG,CAACP,GAAG,CAAC;EAChBM,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;EACpB,IAAG;IACC,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACT,GAAG,EAAEI,OAAO,CAAC;IAC1CE,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;IACrB,IAAIA,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;EACtE,CAAC,CAAC,OAAMC,GAAG,EAAC;IACRP,UAAU,GAAGO,GAAG,CAACC,OAAO;EAC5B,CAAC,SAAS;IACN,OAAOR,UAAU;EACrB;AACJ,CAAC;AAAAS,EAAA,GAZKf,QAAQ;AAad,eAAeA,QAAQ;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}