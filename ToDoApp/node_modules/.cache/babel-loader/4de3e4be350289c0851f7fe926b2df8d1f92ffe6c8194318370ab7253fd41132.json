{"ast":null,"code":"var _jsxFileName = \"/Users/sambasivamkrishnamurthy/react-projects/ToDoApp/src/ToDoAdd.js\",\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport Items from './Items';\nimport Search from './Search';\nimport { CgAddR } from 'react-icons/cg';\nimport './Content.css';\nimport './Search.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToDoAdd() {\n  _s2();\n  var _s = $RefreshSig$();\n  const API_URL = 'http://localhost:3500/items';\n  const [todocount, settodocount] = React.useState(0);\n  const [items, setItems] = React.useState([]);\n  const [todo, settodo] = React.useState('');\n  const [search, setSearch] = React.useState('');\n  const [fetchError, setFetchError] = React.useState(null);\n  const inputRef = React.useRef();\n\n  // function handleAddItem(){\n  //     if (!todo) return\n  //     const listItems = [{\n  //         id: todocount+1,\n  //         checked: false,\n  //         title: todo\n  //     }]\n  //     //console.log(listItems)\n  //     const updatedItems = [...items, ...listItems]\n  //     setItems(updatedItems)\n  //     localStorage.setItem('todo_list',JSON.stringify(updatedItems))\n  //     //console.log(items)\n  //     settodocount(+todocount+1)\n  //     settodo('')\n  //     inputRef.current.focus()\n  // }  \n\n  // function handleItemEntry(event){\n  //     settodo(event.target.value)\n  //     //console.log(event)\n  //     //event.target.value = \"\"\n\n  // }\n  // function handleRemoveItem(id){\n  //     //alert(id)\n  //     let listItems = items.filter(item => item.id !== id)\n  //     setItems(listItems)\n  //     localStorage.setItem('todo_list', JSON.stringify(listItems))\n  // }\n  // function handleSelection(id) {\n  //     const listItems = items.map((item) => \n  //         item.id === id ? {...item, ischecked:!item.ischecked} : item\n  //     )\n  //     setItems(listItems)\n  //     localStorage.setItem('todo_list', JSON.stringify(listItems))\n  // }\n\n  const FetchItems = async () => {\n    _s();\n    try {\n      const response = await fetch(API_URL);\n      if (response.status === 200) {\n        const listItems = response.json();\n        setItems(listItems);\n        setFetchError(null);\n      } else {\n        throw new Error(\"Data Not Loaded\");\n      }\n    } catch (err) {\n      setFetchError(err);\n    } finally {}\n    React.useEffect(() => {\n      FetchItems();\n    }, []);\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Welcome to ToDo App. You have total \", todocount, \" ToDo's\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"new\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              autoFocus: true,\n              ref: inputRef,\n              placeholder: \"Add ToDo Item\",\n              value: todo,\n              onChange: event => handleItemEntry(event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAddItem,\n              children: /*#__PURE__*/_jsxDEV(CgAddR, {\n                role: \"button\",\n                tabIndex: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Search, {\n            Search: search,\n            setSearch: setSearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Available ToDo's are...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this), items && items.length > 0 ? /*#__PURE__*/_jsxDEV(Items, {\n          items: items.filter(item => item.title.toLowerCase().includes(search.toLowerCase())),\n          handleSelection: handleSelection,\n          handleRemoveItem: handleRemoveItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Your ToDo list is empty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this);\n  };\n  _s(FetchItems, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n}\n_s2(ToDoAdd, \"z5V+1s7vh/Ts6vlFFhSoxzRulkY=\");\n_c = ToDoAdd;\nvar _c;\n$RefreshReg$(_c, \"ToDoAdd\");","map":{"version":3,"names":["React","Items","Search","CgAddR","jsxDEV","_jsxDEV","ToDoAdd","_s2","_s","$RefreshSig$","API_URL","todocount","settodocount","useState","items","setItems","todo","settodo","search","setSearch","fetchError","setFetchError","inputRef","useRef","FetchItems","response","fetch","status","listItems","json","Error","err","useEffect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","autoFocus","ref","placeholder","value","onChange","event","handleItemEntry","onClick","handleAddItem","role","tabIndex","length","filter","item","title","toLowerCase","includes","handleSelection","handleRemoveItem","_c","$RefreshReg$"],"sources":["/Users/sambasivamkrishnamurthy/react-projects/ToDoApp/src/ToDoAdd.js"],"sourcesContent":["import React from 'react'\nimport Items from './Items';\nimport Search from './Search';\nimport { CgAddR } from 'react-icons/cg';\nimport './Content.css'\nimport './Search.css'\n\n\nexport default function ToDoAdd () {\n    const API_URL = 'http://localhost:3500/items'\n    const [todocount, settodocount] = React.useState(0)\n    const [items, setItems] = React.useState([])\n    const [todo, settodo] = React.useState('')\n    const [search, setSearch] = React.useState('')\n    const [fetchError, setFetchError] = React.useState(null)\n\n    const inputRef = React.useRef()\n\n    // function handleAddItem(){\n    //     if (!todo) return\n    //     const listItems = [{\n    //         id: todocount+1,\n    //         checked: false,\n    //         title: todo\n    //     }]\n    //     //console.log(listItems)\n    //     const updatedItems = [...items, ...listItems]\n    //     setItems(updatedItems)\n    //     localStorage.setItem('todo_list',JSON.stringify(updatedItems))\n    //     //console.log(items)\n    //     settodocount(+todocount+1)\n    //     settodo('')\n    //     inputRef.current.focus()\n    // }  \n\n    // function handleItemEntry(event){\n    //     settodo(event.target.value)\n    //     //console.log(event)\n    //     //event.target.value = \"\"\n        \n    // }\n    // function handleRemoveItem(id){\n    //     //alert(id)\n    //     let listItems = items.filter(item => item.id !== id)\n    //     setItems(listItems)\n    //     localStorage.setItem('todo_list', JSON.stringify(listItems))\n    // }\n    // function handleSelection(id) {\n    //     const listItems = items.map((item) => \n    //         item.id === id ? {...item, ischecked:!item.ischecked} : item\n    //     )\n    //     setItems(listItems)\n    //     localStorage.setItem('todo_list', JSON.stringify(listItems))\n    // }\n\n    const FetchItems = async () => {\n        try {\n            const response = await fetch(API_URL)\n            if (response.status === 200) {\n                const listItems = response.json()\n                setItems(listItems)\n                setFetchError(null)\n            }else{\n                throw new Error(\"Data Not Loaded\")\n            }\n        }catch (err) {\n            setFetchError(err)\n        }finally {\n\n        }\n\n\n    React.useEffect(()=>{\n        FetchItems();\n        },[])\n\nreturn (\n    <main className='main'>\n    <p>Welcome to ToDo App. You have total {todocount} ToDo's</p>\n    <div>\n        <ul>\n            <li className=\"new\">\n                <input type='text' autoFocus ref = {inputRef} placeholder='Add ToDo Item' value = {todo} onChange={(event) => handleItemEntry(event)}/>\n                <button onClick={handleAddItem}><CgAddR role=\"button\" tabIndex=\"0\"/></button>  \n            </li>\n            <Search\n                Search={search}\n                setSearch={setSearch} \n            />\n        </ul>\n    </div>\n    <p>\n        <h2>\n            Available ToDo's are...\n        </h2>\n        {(items && items.length > 0) ? \n        (\n            <Items \n                items = {items.filter(item => (item.title.toLowerCase()).includes(search.toLowerCase()))}\n                handleSelection = {handleSelection}\n                handleRemoveItem = {handleRemoveItem}\n\n            />\n        ): <p><h2>Your ToDo list is empty</h2></p>}         \n    </p>\n    </main>\n)\n}}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,MAAM,QAAQ,gBAAgB;AACvC,OAAO,eAAe;AACtB,OAAO,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGrB,eAAe,SAASC,OAAOA,CAAA,EAAI;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAC/B,MAAMC,OAAO,GAAG,6BAA6B;EAC7C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,KAAK,CAACa,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,KAAK,CAACa,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGjB,KAAK,CAACa,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGnB,KAAK,CAACa,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGrB,KAAK,CAACa,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMS,QAAQ,GAAGtB,KAAK,CAACuB,MAAM,CAAC,CAAC;;EAE/B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAAAhB,EAAA;IAC3B,IAAI;MACA,MAAMiB,QAAQ,GAAG,MAAMC,KAAK,CAAChB,OAAO,CAAC;MACrC,IAAIe,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QACzB,MAAMC,SAAS,GAAGH,QAAQ,CAACI,IAAI,CAAC,CAAC;QACjCd,QAAQ,CAACa,SAAS,CAAC;QACnBP,aAAa,CAAC,IAAI,CAAC;MACvB,CAAC,MAAI;QACD,MAAM,IAAIS,KAAK,CAAC,iBAAiB,CAAC;MACtC;IACJ,CAAC,QAAOC,GAAG,EAAE;MACTV,aAAa,CAACU,GAAG,CAAC;IACtB,CAAC,SAAQ,CAET;IAGJ/B,KAAK,CAACgC,SAAS,CAAC,MAAI;MAChBR,UAAU,CAAC,CAAC;IACZ,CAAC,EAAC,EAAE,CAAC;IAEb,oBACInB,OAAA;MAAM4B,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACtB7B,OAAA;QAAA6B,QAAA,GAAG,sCAAoC,EAACvB,SAAS,EAAC,SAAO;MAAA;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC7DjC,OAAA;QAAA6B,QAAA,eACI7B,OAAA;UAAA6B,QAAA,gBACI7B,OAAA;YAAI4B,SAAS,EAAC,KAAK;YAAAC,QAAA,gBACf7B,OAAA;cAAOkC,IAAI,EAAC,MAAM;cAACC,SAAS;cAACC,GAAG,EAAInB,QAAS;cAACoB,WAAW,EAAC,eAAe;cAACC,KAAK,EAAI3B,IAAK;cAAC4B,QAAQ,EAAGC,KAAK,IAAKC,eAAe,CAACD,KAAK;YAAE;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC,CAAC,eACvIjC,OAAA;cAAQ0C,OAAO,EAAEC,aAAc;cAAAd,QAAA,eAAC7B,OAAA,CAACF,MAAM;gBAAC8C,IAAI,EAAC,QAAQ;gBAACC,QAAQ,EAAC;cAAG;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7E,CAAC,eACLjC,OAAA,CAACH,MAAM;YACHA,MAAM,EAAEgB,MAAO;YACfC,SAAS,EAAEA;UAAU;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACNjC,OAAA;QAAA6B,QAAA,gBACI7B,OAAA;UAAA6B,QAAA,EAAI;QAEJ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACHxB,KAAK,IAAIA,KAAK,CAACqC,MAAM,GAAG,CAAC,gBAEvB9C,OAAA,CAACJ,KAAK;UACFa,KAAK,EAAIA,KAAK,CAACsC,MAAM,CAACC,IAAI,IAAKA,IAAI,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAAEC,QAAQ,CAACtC,MAAM,CAACqC,WAAW,CAAC,CAAC,CAAC,CAAE;UACzFE,eAAe,EAAIA,eAAgB;UACnCC,gBAAgB,EAAIA;QAAiB;UAAAvB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAExC,CAAC,gBACHjC,OAAA;UAAA6B,QAAA,eAAG7B,OAAA;YAAA6B,QAAA,EAAI;UAAuB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAEX,CAAC;EAAA9B,EAAA,CApDSgB,UAAU;AAoDnB;AAACjB,GAAA,CAnGsBD,OAAO;AAAAqD,EAAA,GAAPrD,OAAO;AAAA,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}